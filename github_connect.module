<?php

/**
 * @file
 * Gives site visitors the ability to log in with GitHub (http://github.com).
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\user\UserInterface;

/**
 * Implements hook_help().
 */
function github_connect_help($route_name) {
  switch ($route_name) {
    case 'help.page.github':
      return t('Gives site visitors the ability to login to Drupal with their GitHub account.');
  }
}

/**
 * Implements hook_user_delete().
 */
function github_connect_user_delete(UserInterface $account) {
  // Delete the user from github_connect_users table.
  if (github_connect_get_user_token($account->id())) {
    db_delete('github_connect_users')
      ->condition('uid', $account->id())
      ->execute();
    db_delete('github_connect_authmap')
      ->condition('uid', $account->id())
      ->execute();
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function github_connect_form_user_login_block_alter(&$form, &$form_state) {
  _github_connect_user_login_form_alter($form, $form_state);
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function github_connect_form_user_login_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  _github_connect_user_login_form_alter($form, $form_state);
  $form['#attributes']['class'][] = 'github-links';
}

/**
 * Callback function to display block.
 */
function _github_connect_user_login_form_alter(&$form, FormStateInterface $form_state) {

  $block_manager = \Drupal::service('plugin.manager.block');
  $config = [];
  $block_plugin = $block_manager->createInstance('github_connect_block', $config)->build();

  $form['github_links'] = array(
    '#type' => 'markup',
    '#markup' => render($block_plugin),
  );
}

/**
 * Get GitHub access token for User.
 *
 * @param $uid integer
 *   User user id
 *
 * @return $token
 *   Access token from GitHub
 */
function github_connect_get_user_token($uid) {
  if ($uid) {
    $result = db_select('github_connect_users', 'g_u')
      ->fields('g_u', array('uid', 'access_token'))
      ->condition('uid', $uid, '=')
      ->execute()
      ->fetchAssoc();

    $token = $result['access_token'];
    return $token;
  }
}
